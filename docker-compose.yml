version: '3.8'

services:
  # Backend Django API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: irrigation_backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - DATABASE_URL=sqlite:///app/db/irrigation.db
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - ./backend/db:/app/db
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App  
  frontend:
    build:
      context: ./frontend/web-dashboard
      dockerfile: Dockerfile
    container_name: irrigation_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  # NGINX Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: irrigation_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production

  # Database backup service
  db-backup:
    image: alpine:latest
    container_name: irrigation_backup
    volumes:
      - ./backend/db:/data
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          tar -czf /backups/db-backup-$$(date +%Y%m%d-%H%M%S).tar.gz /data/irrigation.db
          find /backups -name 'db-backup-*.tar.gz' -mtime +7 -delete
          sleep 86400
        done
      "
    restart: unless-stopped
    profiles:
      - production

volumes:
  irrigation_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: irrigation_network
